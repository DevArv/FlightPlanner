@using FlightPlanner.Enum
@model FlightPlanner.ViewModels.FlightPlannerSimpleViewModel

@{
    var approachTypeOptions = Html.GetEnumSelectList<ApproachTypeEnum>();
}

<div class="row">
    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.ICAOArrival)" class="form-label">ICAO</label>
        <input type="text" class="form-control" style="background-color: lightyellow;" id="@nameof(Model.ICAOArrival)" value="@Model.ICAOArrival"/>
    </div>

    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.ArrivalAirportName)" class="form-label">Nombre Aeropuerto</label>
        <input type="text" class="form-control" id="@nameof(Model.ArrivalAirportName)" value="@Model.ArrivalAirportName"/>
    </div>
    
    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.ArrivalRunway)" class="form-label">Pista de Llegada</label>
        <input type="number" class="form-control" id="@nameof(Model.ArrivalRunway)" value="@Model.ArrivalRunway"/>
    </div>

    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.BaroPressureArrival)" class="form-label">BARO</label>
        <input type="number" class="form-control" id="@nameof(Model.BaroPressureArrival)" value="@Model.BaroPressureArrival"/>
    </div>

    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.TransitionAltitudeArrival)" class="form-label">Altitud de Transición</label>
        <input type="number" class="form-control" id="@nameof(Model.TransitionAltitudeArrival)" value="@Model.TransitionAltitudeArrival"/>
    </div>

    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.ArrivalRunwayElevation)" class="form-label">Elevación de Pista</label>
        <input type="number" class="form-control" id="@nameof(Model.ArrivalRunwayElevation)" value="@Model.ArrivalRunwayElevation"/>
    </div>

    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.ArrivalRunwayMinimumAltitude)" class="form-label">Altitud Minima de Aproximación</label>
        <input type="number" class="form-control" id="@nameof(Model.ArrivalRunwayMinimumAltitude)" value="@Model.ArrivalRunwayMinimumAltitude"/>
    </div>

    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.LocalizerFrequency)" class="form-label">Localizador</label>
        <input type="number" class="form-control" id="@nameof(Model.LocalizerFrequency)" value="@Model.LocalizerFrequency"/>
    </div>

    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.LocalizerVectorName)" class="form-label">Vector Final Ruedas de Aterrizaje</label>
        <input type="text" class="form-control" id="@nameof(Model.LocalizerVectorName)" value="@Model.LocalizerVectorName"/>
    </div>
    
    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.LocalizerVectorAltitude)" class="form-label">Altitud Vector Localizador</label>
        <input type="number" class="form-control" id="@nameof(Model.LocalizerVectorAltitude)" value="@Model.LocalizerVectorAltitude"/>
    </div>
    
    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.ArrivalRunwayLength)" class="form-label">Largo de Pista de Llegada</label>
        <input type="number" class="form-control" id="@nameof(Model.ArrivalRunwayLength)" value="@Model.ArrivalRunwayLength"/>
    </div>
    
    <div class="col-md-3 mb-3">
        <label for="@nameof(Model.ApproachType)" class="form-label">Tipo de Aterrizaje</label>
        <select name="@nameof(Model.ApproachType)" class="form-select" id="@nameof(Model.ApproachType)">
            @foreach (var item in approachTypeOptions)
            {
                <option value="@item.Value"
                        selected="@(item.Value == ((int)Model.ApproachType).ToString())">
                    @item.Text
                </option>
            }
        </select>
    </div>
</div>